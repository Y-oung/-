#include<iostream>

using namespace std;
int partition(int arr[], int i, int j)
{
	int temp=arr[i];
	while(i<j)
	{
		while(i<j && temp>=arr[j])
		{
			j--;
		} 
		swap(arr[i],  arr[j]);
		while(i<j && temp<=arr[i])
		{
			i++;
		}
		swap(arr[i], arr[j]); 
		
	}
	return i;
}
int findMaxK(int arr[], int k, int start, int end)
{
	int q=partition(arr, start, end);
	
	if(q>k)
	{
		return findMaxK(arr, k ,start, q-1);
	} 
	else if(q<k)
	{
		return findMaxK(arr, k, q+1, end);
	}
	return q;
}

int main(){
	int arr[] = {7, 5, 15, 3, 17, 2, 20, 24, 1, 8, 12};
	int k=6;
	int len=sizeof(arr)/sizeof(int);
	
	int target = findMaxK(arr, k-1, 0, len-1);
	cout<<arr[target]<<endl;
	
	return 0;
}
